---
name: Pull Request Checks
on:
  pull_request:
jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            aide-de-camp:
              - 'aide-de-camp-sqlite/**'
            aide-de-camp-sqlite:
              - 'aide-de-camp-sqlite/**'
  code-style:
    runs-on: ubuntu-latest
    env:
      SQLX_OFFLINE: true
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          components: rustfmt, clippy
      - uses: LoliGothick/rustfmt-check@v0.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- --deny=warnings

  quality-assurance:
    name: Quality Assurance (${{ matrix.project }})
    needs: changes
    strategy:
      matrix:
        project: ${{ fromJSON(needs.changes.outputs.packages) }}
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      SQLX_OFFLINE: true
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: taiki-e/install-action@nextest
      - name: Test Rust
        working-directory: ${{matrix.project}}
        run: cargo nextest run --profile ci
      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results (${{ matrix.project }})
          path: target/nextest/ci/junit.xml
  publish-test-results:
    name: "Publish Unit Tests Results"
    needs: quality-assurance
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: artifacts/**/*.xml
